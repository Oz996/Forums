generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  category  String
  body      String
  comments  Comment[]
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?   @db.ObjectId
  createdAt DateTime  @default(now())
  editedAt  DateTime  @default(now())
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  createdAt DateTime @default(now())
  editedAt  DateTime @default(now())
}

model User {
  id                     String           @id @default(auto()) @map("_id") @db.ObjectId
  userName               String           @unique
  email                  String           @unique
  password               String
  image                  String?
  posts                  Post[]
  comments               Comment[]
  ProfileComment         ProfileComment[]
  createdAt              DateTime         @default(now())
  editedAt               DateTime         @default(now())
  ProfileCommentSent     ProfileComment[] @relation("Sender")
  ProfileCommentReceived ProfileComment[] @relation("Receiver")
}

model ProfileComment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  body       String
  sender     User?    @relation("Sender", fields: [senderId], references: [id])
  senderId   String   @db.ObjectId
  receiver   User?    @relation("Receiver", fields: [receiverId], references: [id])
  receiverId String   @db.ObjectId
  createdAt  DateTime @default(now())
  editedAt   DateTime @default(now())
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?  @db.ObjectId
}

model Membership {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  option      String
  price       Int
  description String
  features    String[]
}
